// AJAX PART
// AJAX-часть
// Все манипуляции с карточками (создание, обновление, удаление) происходят с помощью AJAX-запросов к базе данных. Вам нужно зарегистрироваться по ссылке http://cards.danit.com.ua/register, введя свой логин и пароль, чтобы иметь возможность работать дальше.
//
//     Токен, необходимый для работы с базой банных
// Все GET, POST, PUT и DELETE запросы по адресу http://cards.danit.com.ua/cards требуют авторизации. Для этого вам нужно к каждому запросу добавлять в заголовке запроса имени Authorization ваш токен (который возвращается вам в теле запроса в случае успешной авторизации по адресу  http://cards.danit.com.ua/login) в виде
//     Authorization: "Bearer ${your_token}"
// Важно! Если вы неправильно передали токен в заголовке, то получите ответ с кодом 401 и объектом:
// {
//   status: "Error",
//       token: "You are not authorized"
// }
// Поэтому, увидев такую  ошибку, знайте - вы неправильно передали токен в заголовке.
//
//     POST-запросы:
//
// При входе на страницу, чтобы успешно отправлять AJAX-запросы для работы с карточками, вам нужно получить токен. А для этого вам нужно авторизироваться - послать POST-запрос по адресу http://cards.danit.com.ua/login, и получить в теле ответа необходимый токен.
//     Пример запроса:
//
// {
//   "email": "your.mail@gmail.com",
//     "password": "12344344аа"
// };
//
// Пример ответа:
// {
//   status: "Success",
//       token: "b42238453cb3"
// }
// Полученый токен вам необходимо будет использовать во всех остальных запросах, добавив его в заголовок запроса по имени Authorization в виде:
//     Authorization: "Bearer ${your_token}"
// В случае неправильной передачи токена в любом AJAX-запросе вы получите ответ:
// {
//   status: "Error",
//       message: "Login or password are incorrect",
//     token: null
// }
//
// Для создания карточки после заполнения формы в модальном окне вам нужно отправить POST-запрос на адрес http://cards.danit.com.ua/cards. Все, что вы напишете в теле запроса, попадет в базу данных как содержимое карточки.
//     Пример запроса:
//
// {
//   doctor: "cardiolog",
//       title: "Цель визита",
//     description: 'Краткое описание визита',
//     status: "open",
//     priority: "Приоритет",
//     content: {
//   bp: "24",
//       age: 23,
//       weight: 70
// }
// }
// При успешном добавлении карточки в базу, в качестве ответа вы получите переданный вами объект с добавлением id карточки в базе.
//     Пример ответа:
// {
//   id: 16,
//       doctor: "cardiolog",
//     title: "Цель визита",
//     description: 'Краткое описание визита',
//     status: "open",
//     priority: "Приоритет",
//     content: {
//   bp: "24",
//       age: 23,
//       weight: 70
// }
// }
// Не забудьте сохранить в объекте, описывающем эту карточку, полученный id.
//
//     DELETE:
//
// Удаление карточки происходит при нажатии на крестик в верхнем правом углу карточки и подтверждения удаления путем ввода пароля.
//     Для удаления карточки из базы данных вам нужно отправить DELETE-запрос на роут http://cards.danit.com.ua/cards/${cardId}, указав в качестве ${cardId} уникальный номер карточки из базы данных, полученный вами после добавления карточки в базу.
//     Пример запроса:
//
//     DELETE запрос на адрес: http://cards.danit.com.ua/cards/1
//     Если удаление прошло успешно, вы получите такой ответ:
// {
//   status: "Success"
// }
//
// GET-запросы:
//
//
// Получение всех созданных вами карточек. Для этого нужно отправить GET-запрос на роут http://cards.danit.com.ua/cards указав ваш токен в заголовке запроса (подробнее смотрите выше). В качестве ответа вы получите массив созданых вашей командой карточек в формате JSON, после чего на их основе вы создаете объекты нужного класса (VisitCardio, VisitGastro и т.д.) и, используя их метод render(), выводите их на экран.
//
//
//     Если вы хотите получить данные об одной карточке, то отправьте GET-запрос на роут http://cards.danit.com.ua/cards/${cardId}, указав в качестве ${cardId} уникальный номер карточки из базы данных.
//
//
//     Фильтр карточек (поле Input для ввода текста поиска по заголовку или описанию визита, выпадающий список по статусу, выпадающий список по приоритету). Пример: http://joxi.ru/n2Y37Enibv0B8r.
//     Фильтр вам нужно делать на фронтенде - то есть при изменении value любого элемента формы (выбран пункт в выпадающем списке, было введено что-то в Input) вы отправляете GET-запрос на адрес http://cards.danit.com.ua/cards, и, получив весь массив карточек, фильтруете его на фронтенде.
//
//
//
//     PUT:
//
//         Для обновление карточки после ее редактирования отправьте PUT-запрос на адрес http://cards.danit.com.ua/cards/${cardId}, указав в качестве ${cardId} уникальный номер карточки из базы данных, а в теле запроса - новое содержимое карточки.
//     Пример запроса:
//
// {
//   doctor: "cardiolog",
//       title: "НоваяцЦель визита",
//     description: 'Краткое описание визита',
//     status: "close",
//     priority: "Приоритет",
//     content: {
//   bp: "24",
//       age: 23,
//       weight: 70
// }
// }
// При успешном измении содержимого карточки в базе данных, в качестве ответа вы получите переданный вами объект с добавлением id карточки в базе.
//     Пример ответа:
// {
//   id: 18,
//       doctor: "cardiolog",
//     title: "НоваяцЦель визита",
//     description: 'Краткое описание визита',
//     status: "close",
//     priority: "Приоритет",
//     content: {
//   bp: "24",
//       age: 23,
//       weight: 70
// }
// }
// FILTER

